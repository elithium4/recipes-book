openapi: 3.0.3
info:
  title: Книга рецептов - OpenAPI 3.0
  description: Книга рецептов с возможностью создания списка покупок на основе рецепта
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /
tags:
- name: ingredients
  description: Ингредиенты для готовки
- name: recipes
  description: Все о рецептах
- name: shoppinglist
  description: Список покупок для готовки
paths:
  /ingredients:
    get:
      tags:
      - ingredients
      summary: Получить список ингредиентов
      description: Возвращает список ингредиентов
      operationId: getIngredients
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
                x-content-type: application/json
      x-swagger-router-controller: Ingredients
    post:
      tags:
      - ingredients
      summary: Добавить новый ингредиент
      description: Добавляет новый ингредиент
      operationId: addIngredient
      requestBody:
        description: Создать новый ингредиент
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/xml:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
            application/xml:
              schema:
                $ref: '#/components/schemas/Ingredient'
        "400":
          description: Некорректные данные
      x-swagger-router-controller: Ingredients
  /ingredients/{id}:
    put:
      tags:
      - ingredients
      summary: Обновить ингредиент по id
      description: Обновляет ингредиент
      operationId: updateIngredientById
      parameters:
      - name: id
        in: path
        description: ID обновляемого ингредиента
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Данные о ингредиенте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        "200":
          description: Успешное изменение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Некорректное значение ID
        "404":
          description: Рецепт не найден
      x-swagger-router-controller: Ingredients
    delete:
      tags:
      - ingredients
      summary: Удалить ингредиент по id
      description: Удаляет ингредиент с указанным id
      operationId: deleteIngredientById
      parameters:
      - name: id
        in: path
        description: ID удаляемого ингредиента
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешное удаление
        "400":
          description: Некорректное значение ID
        "404":
          description: Ингредиент не найден
      x-swagger-router-controller: Ingredients
  /recipes:
    get:
      tags:
      - recipes
      summary: Получить список рецептов
      description: Возвращает список добавленных рецептов
      operationId: getRecipes
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
                x-content-type: application/json
      x-swagger-router-controller: Recipes
    post:
      tags:
      - recipes
      summary: Добавить новый рецепт
      description: Добавляет новый рецепт
      operationId: addRecipe
      requestBody:
        description: Создать новый рецепт
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        "200":
          description: Успешное добавление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Некорректные данные
      x-swagger-router-controller: Recipes
  /recipes/{id}:
    get:
      tags:
      - recipes
      summary: Получить рецепт по id
      description: Возвращает рецепт
      operationId: getRecipeById
      parameters:
      - name: id
        in: path
        description: ID запрашиваемого рецепта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Некорректное значение ID
        "404":
          description: Рецепт не найден
      x-swagger-router-controller: Recipes
    put:
      tags:
      - recipes
      summary: Обновить рецепт по id
      description: Обновляет рецепт рецепт
      operationId: updateRecipeById
      parameters:
      - name: id
        in: path
        description: ID обновляемого рецепта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Данные о рецепте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        "200":
          description: Успешное изменение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Некорректное значение ID
        "404":
          description: Рецепт не найден
      x-swagger-router-controller: Recipes
    delete:
      tags:
      - recipes
      summary: Удалить рецепт по id
      description: Удаляет рецепт с указанным id
      operationId: deleteRecipeById
      parameters:
      - name: id
        in: path
        description: ID удаляемого рецепта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешное удаление
        "400":
          description: Некорректное значение ID
        "404":
          description: Рецепт не найден
      x-swagger-router-controller: Recipes
  /shoppinglist:
    get:
      tags:
      - shoppinglist
      summary: Получить список списков покупок
      description: Возвращает список списков покупок
      operationId: getShoppingLists
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingList'
                x-content-type: application/json
      x-swagger-router-controller: Shoppinglist
  /shoppinglist/{id}:
    get:
      tags:
      - shoppinglist
      summary: Получить список покупок по id
      description: Возвращает список покупок
      operationId: getShoppingListById
      parameters:
      - name: id
        in: path
        description: ID запрашиваемого списка
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShoppingList'
        "400":
          description: Некорректное значение ID
        "404":
          description: Список не найден
      x-swagger-router-controller: Shoppinglist
    put:
      tags:
      - shoppinglist
      summary: Обновить список покупок по id
      description: Обновляет рецепт рецепт
      operationId: updateShoppingListById
      parameters:
      - name: id
        in: path
        description: ID обновляемого списка
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Данные о списке
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingList'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShoppingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingList'
      responses:
        "200":
          description: Успешное изменение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShoppingList'
        "400":
          description: Некорректное значение ID
        "404":
          description: Список не найден
      x-swagger-router-controller: Shoppinglist
    delete:
      tags:
      - shoppinglist
      summary: Удалить список покупок по id
      description: Удаляет список покупок с указанным id
      operationId: deleteShoppingListById
      parameters:
      - name: id
        in: path
        description: ID удаляемого списка
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешное удаление
        "400":
          description: Некорректное значение ID
        "404":
          description: Список не найден
      x-swagger-router-controller: Shoppinglist
  /shoppinglist/{listId}/recipe/{recipeId}:
    post:
      tags:
      - shoppinglist
      summary: Добавить в список продукты для рецепта
      description: "Добавляет в список ингредиенты, содержащиеся в рецепте"
      operationId: addRecipeIngredientsToList
      parameters:
      - name: listId
        in: path
        description: ID обновляемого списка
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: recipeId
        in: path
        description: ID рецепта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Данные о списке
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingList'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShoppingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingList'
      responses:
        "200":
          description: Успешное изменение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Некорректное значение ID
        "404":
          description: Рецепт или список не найден
      x-swagger-router-controller: Shoppinglist
components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          description: Название рецепта
          example: Грибной суп
        portion:
          type: integer
          description: Число порций
          example: 12
        cookingTime:
          type: integer
          description: Время приготовления в минутах
          format: int32
          example: 120
        creationDate:
          type: string
          format: date-time
        ingredients:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/RecipeIngredient'
        steps:
          type: array
          description: Шаги приготовления
          example:
          - Почистить и помыть грибы
          - Сварить суп
          - "Заказать пиццу с грибами, пока ждешь готовности супа"
          items:
            type: string
      example:
        portion: 12
        name: Грибной суп
        ingredients:
        - ""
        - ""
        id: 10
        creationDate: 2000-01-23T04:56:07.000+00:00
        steps:
        - Почистить и помыть грибы
        - Сварить суп
        - "Заказать пиццу с грибами, пока ждешь готовности супа"
        cookingTime: 120
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          description: Категория ингредиента
          example: Грибы
        type:
          type: string
          example: Other
          enum:
          - Vegetable
          - Fruit
          - Meat
          - Fish
          - Dairy
          - Spice
          - Sweets
          - Other
      example:
        name: Грибы
        id: 11
        type: Other
    RecipeIngredient:
      allOf:
      - $ref: '#/components/schemas/Ingredient'
      - type: object
        properties:
          amount:
            type: number
            example: 4
          unit:
            type: string
            example: gr
            enum:
            - p
            - gr
            - ml
    ShoppingList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          description: Название списка
          example: Ужин на завтра
        creationDate:
          type: string
          description: Дата создания списка
          format: date-time
        items:
          type: array
          description: Ингредиенты
          items:
            $ref: '#/components/schemas/RecipeIngredient'
      example:
        name: Ужин на завтра
        id: 11
        creationDate: 2000-01-23T04:56:07.000+00:00
        items:
        - ""
        - ""
